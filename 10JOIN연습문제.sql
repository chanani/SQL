--문제 1.
---EMPLOYEES 테이블과, DEPARTMENTS 테이블은 DEPARTMENT_ID로 연결되어 있습니다.
---EMPLOYEES, DEPARTMENTS 테이블을 엘리어스를 이용해서
--각각 INNER , LEFT OUTER, RIGHT OUTER, FULL OUTER 조인 하세요. (달라지는 행의 개수 확인)
-- INNER
SELECT * 
FROM EMPLOYEES e
JOIN DEPARTMENTS d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;

-- LEFT OUTER
SELECT *
FROM EMPLOYEES e
LEFT OUTER JOIN DEPARTMENTS d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;
-- RIGHT OUTER
SELECT *
FROM EMPLOYEES e
RIGHT OUTER JOIN DEPARTMENTS d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;
-- FULL OUTER
SELECT *
FROM EMPLOYEES e
FULL OUTER JOIN DEPARTMENTS d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;
--문제 2.
---EMPLOYEES, DEPARTMENTS 테이블을 INNER JOIN하세요
--조건)employee_id가 200인 사람의 이름, department_id를 출력하세요 조건)이름 컬럼은 first_name과 last_name을 합쳐서 출력합니다
SELECT CONCAT(e.FIRST_NAME, e.LAST_NAME) AS NAME,
       e.DEPARTMENT_ID
FROM EMPLOYEES e
INNER JOIN DEPARTMENTS d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE EMPLOYEE_ID = 200;

--문제 3.
---EMPLOYEES, JOBS테이블을 INNER JOIN하세요
--조건) 모든 사원의 이름과 직무아이디, 직무 타이틀을 출력하고, 이름 기준으로 오름차순 정렬 HINT) 어떤 컬럼으로 서로 연결되 있는지 확인

SELECT e.FIRST_NAME, j.JOB_TITLE
FROM EMPLOYEES e
INNER JOIN JOBS j
USING(JOB_ID)
ORDER BY FIRST_NAME ASC;

--문제 4.
----JOBS테이블과 JOB_HISTORY테이블을 LEFT_OUTER JOIN 하세요.

SELECT *
FROM JOBS j
LEFT OUTER JOIN JOB_HISTORY h
ON j.JOB_ID = h.JOB_ID;

--문제 5.
----Steven King의 부서명을 출력하세요.
SELECT j.FIRST_NAME, h.DEPARTMENT_NAME
FROM JOBS e
LEFT OUTER JOIN JOB_HISTORY j
ON e.JOB_ID = j.JOB_ID
LEFT OUTER JOIN DEPARTMENTS h
ON j.DEPARTMENT_ID = h.DEPARTMENT_ID;

SELECT FIRST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE FIRST_NAME = 'Steven' AND LAST_NAME = 'King';

--문제 6.
----EMPLOYEES 테이블과 DEPARTMENTS 테이블을 Cartesian Product(Cross join)처리하세요
SELECT *
FROM EMPLOYEES e
CROSS JOIN DEPARTMENTS d;

--문제 7.
----EMPLOYEES 테이블과 DEPARTMENTS 테이블의 부서번호를 조인하고 SA_MAN 사원만의 사원번호, 이름, 급여, 부서명, 근무지를 출력하세요. (Alias를 사용)
SELECT e.EMPLOYEE_ID, 
       e.FIRST_NAME, 
       e.SALARY, 
       D.DEPARTMENT_NAME,
       l.STREET_ADDRESS
FROM EMPLOYEES e
LEFT JOIN DEPARTMENTS d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
LEFT JOIN locations l
ON d.LOCATION_ID = l.LOCATION_ID
WHERE JOB_ID = 'SA_MAN';

--문제 8.
---- employees, jobs 테이블을 조인 지정하고 job_title이 'Stock Manager', 'Stock Clerk'인 직원 정보만 출력하세요.

SELECT e.*,
       j.JOB_TITLE
FROM EMPLOYEES e LEFT JOIN JOBS j ON e.JOB_ID = j.JOB_ID
WHERE JOB_TITLE IN ('Stock Manager', 'Stock Clerk');


--문제 9.
---- departments 테이블에서 직원이 없는 부서를 찾아 출력하세요. LEFT OUTER JOIN 사용

SELECT DEPARTMENT_NAME
FROM DEPARTMENTS d LEFT OUTER JOIN EMPLOYEES e
ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
WHERE EMPLOYEE_ID IS NULL;

--문제 10.
---join을 이용해서 사원의 이름과 그 사원의 매니저 이름을 출력하세요 힌트) EMPLOYEES 테이블과 EMPLOYEES 테이블을 조인하세요.
SELECT e1.EMPLOYEE_ID,
       e1.FIRST_NAME AS 사원명,
       e2.FIRST_NAME AS 매니저이름
FROM EMPLOYEES e1 JOIN EMPLOYEES e2 ON e1.MANAGER_ID = e2.EMPLOYEE_ID;

--문제 11.
----6. EMPLOYEES 테이블에서 left join하여 관리자(매니저)와, 매니저의 이름, 매니저의 급여 까지 출력하세요 --매니저 아이디가 없는 사람은 배제하고 급여는 역순으로 출력하세요
SELECT e1.FIRST_NAME AS 사원이름,
       e1.SALARY AS 사원급여,
       e2.EMPLOYEE_ID AS 매니저아이디,
       e2.FIRST_NAME AS 매니저명,
       e2.SALARY AS 매니저급여
FROM EMPLOYEES e1 LEFT JOIN EMPLOYEES e2 ON e1.MANAGER_ID = e2.EMPLOYEE_ID
WHERE e2.EMPLOYEE_ID IS NOT NULL
ORDER BY e1.SALARY DESC;



